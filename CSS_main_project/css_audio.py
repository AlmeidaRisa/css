# -*- coding: utf-8 -*-
"""css_audio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BjTN47rKvPqhy99lG4obDWYctiQRec1z
"""

#!pip install pycryptodome

from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
import os

def encrypt_file(input_file, output_file, key):
    cipher = AES.new(key, AES.MODE_CBC)
    with open(input_file, 'rb') as file:
        plaintext = file.read()
    ciphertext = cipher.encrypt(pad(plaintext, AES.block_size))
    with open(output_file, 'wb') as file:
        file.write(cipher.iv)
        file.write(ciphertext)

def decrypt_file(input_file, output_file, key):
    with open(input_file, 'rb') as file:
        iv = file.read(16)
        ciphertext = file.read()
    cipher = AES.new(key, AES.MODE_CBC, iv)
    decrypted_data = unpad(cipher.decrypt(ciphertext), AES.block_size)
    with open(output_file, 'wb') as file:
        file.write(decrypted_data)

def main():
    choice = input("Enter 'E' to encrypt or 'D' to decrypt: ").strip().upper()
    if choice not in ['E', 'D']:
        print("Invalid choice.")
        return

    input_file = input("Enter input file path: ").strip()
    if not os.path.isfile(input_file):
        print("Input file not found.")
        return

    output_file = input("Enter output file path: ").strip()

    key = input("Enter encryption/decryption key (16/24/32 bytes): ").strip().encode()

    if choice == 'E':
        encrypt_file(input_file, output_file, key)
        print("File encrypted successfully.")
    else:
        decrypt_file(input_file, output_file, key)
        print("File decrypted successfully.")

if __name__ == "__main__":
    main()